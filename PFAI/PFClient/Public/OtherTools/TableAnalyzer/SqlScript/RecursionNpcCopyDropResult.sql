update t_param set CheckLevel = (CheckLevel / 5 + 1);

--[LOOPTEMPLATE {0} 3]--
drop table if exists t_RedEquipDropBossInfo{0};
create table t_RedEquipDropBossInfo{0}(Id integer, Name text);
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId1, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId1 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId2, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId2 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId3, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId3 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId4, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId4 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId5, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId5 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId6, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId6 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId7, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId7 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId8, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId8 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId9, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId9 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId10, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId10 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId11, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId11 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId12, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId12 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId13, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId13 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId14, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId14 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId15, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId15 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId16, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId16 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId17, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId17 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId18, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId18 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId19, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId19 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId20, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId20 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId21, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId21 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId22, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId22 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId23, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId23 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId24, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId24 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId25, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId25 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId26, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId26 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId27, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId27 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId28, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId28 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId29, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId29 != -1; 
insert into t_RedEquipDropBossInfo{0}(Id, Name) select r.BossDataId30, r.Desc from RedEquipDropBossInfo as r where r.Id == {0} and r.BossDataId30 != -1; 
--[LOOPTEMPLATE]--

--[LOOPTEMPLATE {0} 1]--
drop table if exists t_RareGlobalDropBossInfo{0};
create table t_RareGlobalDropBossInfo{0}(Id integer, Name text);
insert into t_RareGlobalDropBossInfo{0}(Id, Name) select r.BossDataId1, r.Desc from RareGlobalDropBossInfo as r where r.Id == {0} and r.BossDataId1 != -1; 
insert into t_RareGlobalDropBossInfo{0}(Id, Name) select r.BossDataId2, r.Desc from RareGlobalDropBossInfo as r where r.Id == {0} and r.BossDataId2 != -1; 
insert into t_RareGlobalDropBossInfo{0}(Id, Name) select r.BossDataId3, r.Desc from RareGlobalDropBossInfo as r where r.Id == {0} and r.BossDataId3 != -1; 
insert into t_RareGlobalDropBossInfo{0}(Id, Name) select r.BossDataId4, r.Desc from RareGlobalDropBossInfo as r where r.Id == {0} and r.BossDataId4 != -1; 
insert into t_RareGlobalDropBossInfo{0}(Id, Name) select r.BossDataId5, r.Desc from RareGlobalDropBossInfo as r where r.Id == {0} and r.BossDataId5 != -1; 
insert into t_RareGlobalDropBossInfo{0}(Id, Name) select r.BossDataId6, r.Desc from RareGlobalDropBossInfo as r where r.Id == {0} and r.BossDataId6 != -1; 
insert into t_RareGlobalDropBossInfo{0}(Id, Name) select r.BossDataId7, r.Desc from RareGlobalDropBossInfo as r where r.Id == {0} and r.BossDataId7 != -1; 
insert into t_RareGlobalDropBossInfo{0}(Id, Name) select r.BossDataId8, r.Desc from RareGlobalDropBossInfo as r where r.Id == {0} and r.BossDataId8 != -1; 
insert into t_RareGlobalDropBossInfo{0}(Id, Name) select r.BossDataId9, r.Desc from RareGlobalDropBossInfo as r where r.Id == {0} and r.BossDataId9 != -1; 
insert into t_RareGlobalDropBossInfo{0}(Id, Name) select r.BossDataId10, r.Desc from RareGlobalDropBossInfo as r where r.Id == {0} and r.BossDataId10 != -1; 
--[LOOPTEMPLATE]--

--[REPLACESQLRESULT {0}|select CheckLevel from t_param limit 1]--
drop table if exists t_NpcAttrCopyDropListId;
create table t_NpcAttrCopyDropListId(Id integer, Name text, NpcLevel integer, DropQingYi integer, DropMentorTeachingId integer, IsRecordDropLog integer, DropResetCountId integer, REORRG text, CopyDropId integer, DropListId integer);
insert into t_NpcAttrCopyDropListId (Id, Name, NpcLevel, DropQingYi, DropMentorTeachingId, IsRecordDropLog, DropResetCountId, REORRG, CopyDropId, DropListId) select n.Id, n.Name, n.Level, n.DropQingYi, n.DropMentorTeachingId, n.IsRecordDropLog, n.DropResetCountId, case when n.Id in (select Id from t_RedEquipDropBossInfo1) then "RedEquip 1" when n.Id in (select Id from t_RedEquipDropBossInfo2) then "RedEquip 2" when n.Id in (select Id from t_RedEquipDropBossInfo3) then "RedEquip 3" when n.Id in (select Id from t_RareGlobalDropBossInfo1) then "RareGlobal 1" else "无" end, n.DropItemCopyId, c.Drop{0} from NpcAttr as n join CopySceneDrop as c on n.DropItemCopyId == c.Id;
insert into t_NpcAttrCopyDropListId (Id, Name, NpcLevel, DropQingYi, DropMentorTeachingId, IsRecordDropLog, DropResetCountId, REORRG, CopyDropId, DropListId) select n.Id, n.Name, n.Level, n.DropQingYi, n.DropMentorTeachingId, n.IsRecordDropLog, n.DropResetCountId, case when n.Id in (select Id from t_RedEquipDropBossInfo1) then "RedEquip 1" when n.Id in (select Id from t_RedEquipDropBossInfo2) then "RedEquip 2" when n.Id in (select Id from t_RedEquipDropBossInfo3) then "RedEquip 3" when n.Id in (select Id from t_RareGlobalDropBossInfo1) then "RareGlobal 1" else "无" end, n.DropItemCopyId, -1 from NpcAttr as n where not exists(select * from t_NpcAttrCopyDropListId where n.Id == t_NpcAttrCopyDropListId.Id);
--[REPLACESQLRESULT]--

drop table if exists t_NpcAttrCopyDrop;
create table t_NpcAttrCopyDrop(Id integer, Name text, NpcLevel integer, DropQingYi integer, DropMentorTeachingId integer, IsRecordDropLog integer, DropResetCountId integer, REORRG text, CopyDropId integer, DropListId integer, RecursionDropId1 integer, RecursionDropId2 integer, RecursionDropId3 integer, RecursionDropId4 integer, RecursionDropId5 integer, RecursionDropId6 integer, RecursionDropId7 integer, RecursionDropId8 integer, RecursionDropId9 integer, RecursionDropId10 integer, RecursionDropId11 integer, RecursionDropId12 integer, RecursionDropId13 integer, RecursionDropId14 integer, RecursionDropId15 integer, RecursionDropId16 integer);
insert into t_NpcAttrCopyDrop (Id, Name, NpcLevel, DropQingYi, DropMentorTeachingId, IsRecordDropLog, DropResetCountId, REORRG, CopyDropId, DropListId, RecursionDropId1, RecursionDropId2, RecursionDropId3, RecursionDropId4, RecursionDropId5, RecursionDropId6, RecursionDropId7, RecursionDropId8, RecursionDropId9, RecursionDropId10, RecursionDropId11, RecursionDropId12, RecursionDropId13, RecursionDropId14, RecursionDropId15, RecursionDropId16) select n.Id, n.Name, n.NpcLevel, n.DropQingYi, n.DropMentorTeachingId, n.IsRecordDropLog, n.DropResetCountId, n.REORRG, n.CopyDropId, n.DropListId, d.CommonDropIndex1, d.CommonDropIndex2, d.CommonDropIndex3, d.CommonDropIndex4, d.CommonDropIndex5, d.CommonDropIndex6, d.CommonDropIndex7, d.CommonDropIndex8, d.CommonDropIndex9, d.CommonDropIndex10, d.CommonDropIndex11, d.CommonDropIndex12, d.CommonDropIndex13, d.CommonDropIndex14, d.CommonDropIndex15, d.CommonDropIndex16 from t_NpcAttrCopyDropListId as n join DropList as d on n.DropListId == d.Id;
insert into t_NpcAttrCopyDrop (Id, Name, NpcLevel, DropQingYi, DropMentorTeachingId, IsRecordDropLog, DropResetCountId, REORRG, CopyDropId, DropListId, RecursionDropId1, RecursionDropId2, RecursionDropId3, RecursionDropId4, RecursionDropId5, RecursionDropId6, RecursionDropId7, RecursionDropId8, RecursionDropId9, RecursionDropId10, RecursionDropId11, RecursionDropId12, RecursionDropId13, RecursionDropId14, RecursionDropId15, RecursionDropId16) select n.Id, n.Name, n.NpcLevel, n.DropQingYi, n.DropMentorTeachingId, n.IsRecordDropLog, n.DropResetCountId, n.REORRG, n.CopyDropId, n.DropListId, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 from t_NpcAttrCopyDropListId as n where not exists(select * from t_NpcAttrCopyDrop where n.Id == t_NpcAttrCopyDrop.Id);

drop table if exists t_NpcAttrCopyDropReset;
create table t_NpcAttrCopyDropReset(Id integer, Description text, Name text, NpcLevel integer, DropQingYi integer, DropMentorTeachingId integer, IsRecordDropLog integer, DropResetCountId integer, DropResetName text, REORRG text, CopyDropId integer, DropListId integer, RecursionDropId1 integer, RecursionDropId2 integer, RecursionDropId3 integer, RecursionDropId4 integer, RecursionDropId5 integer, RecursionDropId6 integer, RecursionDropId7 integer, RecursionDropId8 integer, RecursionDropId9 integer, RecursionDropId10 integer, RecursionDropId11 integer, RecursionDropId12 integer, RecursionDropId13 integer, RecursionDropId14 integer, RecursionDropId15 integer, RecursionDropId16 integer);
insert into t_NpcAttrCopyDropReset (Id, Description, Name, NpcLevel, DropQingYi, DropMentorTeachingId, IsRecordDropLog, DropResetCountId, DropResetName, REORRG, CopyDropId, DropListId, RecursionDropId1, RecursionDropId2, RecursionDropId3, RecursionDropId4, RecursionDropId5, RecursionDropId6, RecursionDropId7, RecursionDropId8, RecursionDropId9, RecursionDropId10, RecursionDropId11, RecursionDropId12, RecursionDropId13, RecursionDropId14, RecursionDropId15, RecursionDropId16) select n.Id, "Id是NPCId, 普通副本掉落", n.Name, n.NpcLevel, n.DropQingYi, n.DropMentorTeachingId, n.IsRecordDropLog, n.DropResetCountId, c.Desc, n.REORRG, n.CopyDropId, n.DropListId, n.RecursionDropId1, n.RecursionDropId2, n.RecursionDropId3, n.RecursionDropId4, n.RecursionDropId5, n.RecursionDropId6, n.RecursionDropId7, n.RecursionDropId8, n.RecursionDropId9, n.RecursionDropId10, n.RecursionDropId11, n.RecursionDropId12, n.RecursionDropId13, n.RecursionDropId14, n.RecursionDropId15, n.RecursionDropId16 from t_NpcAttrCopyDrop as n join CountResetInfo as c on n.DropResetCountId == c.Id;
insert into t_NpcAttrCopyDropReset (Id, Description, Name, NpcLevel, DropQingYi, DropMentorTeachingId, IsRecordDropLog, DropResetCountId, DropResetName, REORRG, CopyDropId, DropListId, RecursionDropId1, RecursionDropId2, RecursionDropId3, RecursionDropId4, RecursionDropId5, RecursionDropId6, RecursionDropId7, RecursionDropId8, RecursionDropId9, RecursionDropId10, RecursionDropId11, RecursionDropId12, RecursionDropId13, RecursionDropId14, RecursionDropId15, RecursionDropId16) select n.Id, "Id是NPCId, 普通副本掉落", n.Name, n.NpcLevel, n.DropQingYi, n.DropMentorTeachingId, n.IsRecordDropLog, n.DropResetCountId, "无", n.REORRG, n.CopyDropId, n.DropListId, n.RecursionDropId1, n.RecursionDropId2, n.RecursionDropId3, n.RecursionDropId4, n.RecursionDropId5, n.RecursionDropId6, n.RecursionDropId7, n.RecursionDropId8, n.RecursionDropId9, n.RecursionDropId10, n.RecursionDropId11, n.RecursionDropId12, n.RecursionDropId13, n.RecursionDropId14, n.RecursionDropId15, n.RecursionDropId16 from t_NpcAttrCopyDrop as n where not exists(select * from t_NpcAttrCopyDropReset where n.Id == t_NpcAttrCopyDropReset.Id);

drop table if exists t_NpcAttrCopyDropResetFinal;
create table t_NpcAttrCopyDropResetFinal(Id integer, Description text, Name text, NpcLevel integer, DropQingYi integer, DropMentorTeachingId integer, IsRecordDropLog integer, DropResetCountId integer, DropResetName text, REORRG text, CopyDropId integer, DropListId integer, RecursionDropId1 integer, RecursionDropId2 integer, RecursionDropId3 integer, RecursionDropId4 integer, RecursionDropId5 integer, RecursionDropId6 integer, RecursionDropId7 integer, RecursionDropId8 integer, RecursionDropId9 integer, RecursionDropId10 integer, RecursionDropId11 integer, RecursionDropId12 integer, RecursionDropId13 integer, RecursionDropId14 integer, RecursionDropId15 integer, RecursionDropId16 integer);
insert into t_NpcAttrCopyDropResetFinal select * from t_NpcAttrCopyDropReset order by t_NpcAttrCopyDropReset.Id;

--[REPLACESQLRESULT {0}|select CheckLevel from t_param limit 1]--
drop table if exists t_NpcAttrSpecCopyDropId;
create table t_NpcAttrSpecCopyDropId(Id integer, Name text, NpcLevel integer, DropQingYi integer, DropMentorTeachingId integer, IsRecordDropLog integer, DropResetCountId integer, REORRG text, CopyDropId integer, DropListId integer);
insert into t_NpcAttrSpecCopyDropId (Id, Name, NpcLevel, DropQingYi, DropMentorTeachingId, IsRecordDropLog, DropResetCountId, REORRG, CopyDropId, DropListId) select n.Id, n.Name, n.Level, n.DropQingYi, n.DropMentorTeachingId, n.IsRecordDropLog, n.DropResetCountId, case when n.Id in (select Id from t_RedEquipDropBossInfo1) then "RedEquip 1" when n.Id in (select Id from t_RedEquipDropBossInfo2) then "RedEquip 2" when n.Id in (select Id from t_RedEquipDropBossInfo3) then "RedEquip 3" when n.Id in (select Id from t_RareGlobalDropBossInfo1) then "RareGlobal 1" else "无" end, n.SpecDropItemCopyId, c.Drop{0} from NpcAttr as n join CopySceneDrop as c on n.SpecDropItemCopyId == c.Id;
insert into t_NpcAttrSpecCopyDropId (Id, Name, NpcLevel, DropQingYi, DropMentorTeachingId, IsRecordDropLog, DropResetCountId, REORRG, CopyDropId, DropListId) select n.Id, n.Name, n.Level, n.DropQingYi, n.DropMentorTeachingId, n.IsRecordDropLog, n.DropResetCountId, case when n.Id in (select Id from t_RedEquipDropBossInfo1) then "RedEquip 1" when n.Id in (select Id from t_RedEquipDropBossInfo2) then "RedEquip 2" when n.Id in (select Id from t_RedEquipDropBossInfo3) then "RedEquip 3" when n.Id in (select Id from t_RareGlobalDropBossInfo1) then "RareGlobal 1" else "无" end, n.SpecDropItemCopyId, -1 from NpcAttr as n where not exists(select * from t_NpcAttrSpecCopyDropId where n.Id == t_NpcAttrSpecCopyDropId.Id);
--[REPLACESQLRESULT]--

drop table if exists t_NpcAttrSpecCopyDrop;
create table t_NpcAttrSpecCopyDrop(Id integer, Name text, NpcLevel integer, DropQingYi integer, DropMentorTeachingId integer, IsRecordDropLog integer, DropResetCountId integer, REORRG text, CopyDropId integer, DropListId integer, RecursionDropId1 integer, RecursionDropId2 integer, RecursionDropId3 integer, RecursionDropId4 integer, RecursionDropId5 integer, RecursionDropId6 integer, RecursionDropId7 integer, RecursionDropId8 integer, RecursionDropId9 integer, RecursionDropId10 integer, RecursionDropId11 integer, RecursionDropId12 integer, RecursionDropId13 integer, RecursionDropId14 integer, RecursionDropId15 integer, RecursionDropId16 integer);
insert into t_NpcAttrSpecCopyDrop (Id, Name, NpcLevel, DropQingYi, DropMentorTeachingId, IsRecordDropLog, DropResetCountId, REORRG, CopyDropId, DropListId, RecursionDropId1, RecursionDropId2, RecursionDropId3, RecursionDropId4, RecursionDropId5, RecursionDropId6, RecursionDropId7, RecursionDropId8, RecursionDropId9, RecursionDropId10, RecursionDropId11, RecursionDropId12, RecursionDropId13, RecursionDropId14, RecursionDropId15, RecursionDropId16) select n.Id, n.Name, n.NpcLevel, n.DropQingYi, n.DropMentorTeachingId, n.IsRecordDropLog, n.DropResetCountId, n.REORRG, n.CopyDropId, n.DropListId, d.CommonDropIndex1, d.CommonDropIndex2, d.CommonDropIndex3, d.CommonDropIndex4, d.CommonDropIndex5, d.CommonDropIndex6, d.CommonDropIndex7, d.CommonDropIndex8, d.CommonDropIndex9, d.CommonDropIndex10, d.CommonDropIndex11, d.CommonDropIndex12, d.CommonDropIndex13, d.CommonDropIndex14, d.CommonDropIndex15, d.CommonDropIndex16 from t_NpcAttrSpecCopyDropId as n join DropList as d on n.DropListId == d.Id;
insert into t_NpcAttrSpecCopyDrop (Id, Name, NpcLevel, DropQingYi, DropMentorTeachingId, IsRecordDropLog, DropResetCountId, REORRG, CopyDropId, DropListId, RecursionDropId1, RecursionDropId2, RecursionDropId3, RecursionDropId4, RecursionDropId5, RecursionDropId6, RecursionDropId7, RecursionDropId8, RecursionDropId9, RecursionDropId10, RecursionDropId11, RecursionDropId12, RecursionDropId13, RecursionDropId14, RecursionDropId15, RecursionDropId16) select n.Id, n.Name, n.NpcLevel, n.DropQingYi, n.DropMentorTeachingId, n.IsRecordDropLog, n.DropResetCountId, n.REORRG, n.CopyDropId, n.DropListId, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 from t_NpcAttrSpecCopyDropId as n where not exists(select * from t_NpcAttrSpecCopyDrop where n.Id == t_NpcAttrSpecCopyDrop.Id);

drop table if exists t_NpcAttrSpecCopyDropReset;
create table t_NpcAttrSpecCopyDropReset(Id integer, Description text, Name text, NpcLevel integer, DropQingYi integer, DropMentorTeachingId integer, IsRecordDropLog integer, DropResetCountId integer, DropResetName text, REORRG text, CopyDropId integer, DropListId integer, RecursionDropId1 integer, RecursionDropId2 integer, RecursionDropId3 integer, RecursionDropId4 integer, RecursionDropId5 integer, RecursionDropId6 integer, RecursionDropId7 integer, RecursionDropId8 integer, RecursionDropId9 integer, RecursionDropId10 integer, RecursionDropId11 integer, RecursionDropId12 integer, RecursionDropId13 integer, RecursionDropId14 integer, RecursionDropId15 integer, RecursionDropId16 integer);
insert into t_NpcAttrSpecCopyDropReset (Id, Description, Name, NpcLevel, DropQingYi, DropMentorTeachingId, IsRecordDropLog, DropResetCountId, DropResetName, REORRG, CopyDropId, DropListId, RecursionDropId1, RecursionDropId2, RecursionDropId3, RecursionDropId4, RecursionDropId5, RecursionDropId6, RecursionDropId7, RecursionDropId8, RecursionDropId9, RecursionDropId10, RecursionDropId11, RecursionDropId12, RecursionDropId13, RecursionDropId14, RecursionDropId15, RecursionDropId16) select n.Id, "Id是NPCId, 副本红装或全服稀有掉落", n.Name, n.NpcLevel, n.DropQingYi, n.DropMentorTeachingId, n.IsRecordDropLog, n.DropResetCountId, c.Desc, n.REORRG, n.CopyDropId, n.DropListId, n.RecursionDropId1, n.RecursionDropId2, n.RecursionDropId3, n.RecursionDropId4, n.RecursionDropId5, n.RecursionDropId6, n.RecursionDropId7, n.RecursionDropId8, n.RecursionDropId9, n.RecursionDropId10, n.RecursionDropId11, n.RecursionDropId12, n.RecursionDropId13, n.RecursionDropId14, n.RecursionDropId15, n.RecursionDropId16 from t_NpcAttrSpecCopyDrop as n join CountResetInfo as c on n.DropResetCountId == c.Id;
insert into t_NpcAttrSpecCopyDropReset (Id, Description, Name, NpcLevel, DropQingYi, DropMentorTeachingId, IsRecordDropLog, DropResetCountId, DropResetName, REORRG, CopyDropId, DropListId, RecursionDropId1, RecursionDropId2, RecursionDropId3, RecursionDropId4, RecursionDropId5, RecursionDropId6, RecursionDropId7, RecursionDropId8, RecursionDropId9, RecursionDropId10, RecursionDropId11, RecursionDropId12, RecursionDropId13, RecursionDropId14, RecursionDropId15, RecursionDropId16) select n.Id, "Id是NPCId, 副本红装或全服稀有掉落", n.Name, n.NpcLevel, n.DropQingYi, n.DropMentorTeachingId, n.IsRecordDropLog, n.DropResetCountId, "无", n.REORRG, n.CopyDropId, n.DropListId, n.RecursionDropId1, n.RecursionDropId2, n.RecursionDropId3, n.RecursionDropId4, n.RecursionDropId5, n.RecursionDropId6, n.RecursionDropId7, n.RecursionDropId8, n.RecursionDropId9, n.RecursionDropId10, n.RecursionDropId11, n.RecursionDropId12, n.RecursionDropId13, n.RecursionDropId14, n.RecursionDropId15, n.RecursionDropId16 from t_NpcAttrSpecCopyDrop as n where not exists(select * from t_NpcAttrSpecCopyDropReset where n.Id == t_NpcAttrSpecCopyDropReset.Id);

drop table if exists t_NpcAttrSpecCopyDropResetFinal;
create table t_NpcAttrSpecCopyDropResetFinal(Id integer, Description text, Name text, NpcLevel integer, DropQingYi integer, DropMentorTeachingId integer, IsRecordDropLog integer, DropResetCountId integer, DropResetName text, REORRG text, CopyDropId integer, DropListId integer, RecursionDropId1 integer, RecursionDropId2 integer, RecursionDropId3 integer, RecursionDropId4 integer, RecursionDropId5 integer, RecursionDropId6 integer, RecursionDropId7 integer, RecursionDropId8 integer, RecursionDropId9 integer, RecursionDropId10 integer, RecursionDropId11 integer, RecursionDropId12 integer, RecursionDropId13 integer, RecursionDropId14 integer, RecursionDropId15 integer, RecursionDropId16 integer);
insert into t_NpcAttrSpecCopyDropResetFinal select * from t_NpcAttrSpecCopyDropReset order by t_NpcAttrSpecCopyDropReset.Id;

drop table if exists t_ResultMid;
create table t_ResultMid(Id integer, Description text, Name text, NpcLevel integer, DropQingYi integer, DropMentorTeachingId integer, IsRecordDropLog integer, DropResetCountId integer, DropResetName text, REORRG text, CopyDropId integer, DropListId integer, 
                      RecursionDropId1 integer, RecursionDropId2 integer, RecursionDropId3 integer, RecursionDropId4 integer, RecursionDropId5 integer, RecursionDropId6 integer, RecursionDropId7 integer, RecursionDropId8 integer, 
					  RecursionDropId9 integer, RecursionDropId10 integer, RecursionDropId11 integer, RecursionDropId12 integer, RecursionDropId13 integer, RecursionDropId14 integer, RecursionDropId15 integer, RecursionDropId16 integer);
insert into t_ResultMid(Id, Description, Name, NpcLevel, DropQingYi, DropMentorTeachingId, IsRecordDropLog, DropResetCountId, DropResetName, REORRG, CopyDropId, DropListId, 
                     RecursionDropId1, RecursionDropId2, RecursionDropId3, RecursionDropId4, RecursionDropId5, RecursionDropId6, RecursionDropId7, RecursionDropId8, 
					 RecursionDropId9, RecursionDropId10, RecursionDropId11, RecursionDropId12, RecursionDropId13, RecursionDropId14, RecursionDropId15, RecursionDropId16) 
                     select nacdrf.Id, nacdrf.Description, nacdrf.Name, nacdrf.NpcLevel, nacdrf.DropQingYi, nacdrf.DropMentorTeachingId, nacdrf.IsRecordDropLog, nacdrf.DropResetCountId, nacdrf.DropResetName, nacdrf.REORRG, nacdrf.CopyDropId, nacdrf.DropListId, 
                     nacdrf.RecursionDropId1, nacdrf.RecursionDropId2, nacdrf.RecursionDropId3, nacdrf.RecursionDropId4, nacdrf.RecursionDropId5, nacdrf.RecursionDropId6, nacdrf.RecursionDropId7, nacdrf.RecursionDropId8, 
					 nacdrf.RecursionDropId9, nacdrf.RecursionDropId10, nacdrf.RecursionDropId11, nacdrf.RecursionDropId12, nacdrf.RecursionDropId13, nacdrf.RecursionDropId14, nacdrf.RecursionDropId15, nacdrf.RecursionDropId16
					 from t_NpcAttrCopyDropResetFinal as nacdrf join t_param as p on (nacdrf.RecursionDropId1 == p.Id or nacdrf.RecursionDropId2 == p.Id or nacdrf.RecursionDropId3 == p.Id or nacdrf.RecursionDropId4 == p.Id or nacdrf.RecursionDropId5 == p.Id or nacdrf.RecursionDropId6 == p.Id or 
					                                                             nacdrf.RecursionDropId7 == p.Id or nacdrf.RecursionDropId8 == p.Id or nacdrf.RecursionDropId9 == p.Id or nacdrf.RecursionDropId10 == p.Id or nacdrf.RecursionDropId11 == p.Id or nacdrf.RecursionDropId12 == p.Id or
																				 nacdrf.RecursionDropId13 == p.Id or nacdrf.RecursionDropId14 == p.Id or nacdrf.RecursionDropId15 == p.Id or nacdrf.RecursionDropId16 == p.Id);
insert into t_ResultMid(Id, Description, Name, NpcLevel, DropQingYi, DropMentorTeachingId, IsRecordDropLog, DropResetCountId, DropResetName, REORRG, CopyDropId, DropListId, 
                     RecursionDropId1, RecursionDropId2, RecursionDropId3, RecursionDropId4, RecursionDropId5, RecursionDropId6, RecursionDropId7, RecursionDropId8, 
					 RecursionDropId9, RecursionDropId10, RecursionDropId11, RecursionDropId12, RecursionDropId13, RecursionDropId14, RecursionDropId15, RecursionDropId16) 
                     select nascdrf.Id, nascdrf.Description, nascdrf.Name, nascdrf.NpcLevel, nascdrf.DropQingYi, nascdrf.DropMentorTeachingId, nascdrf.IsRecordDropLog, nascdrf.DropResetCountId, nascdrf.DropResetName, nascdrf.REORRG, nascdrf.CopyDropId, nascdrf.DropListId, 
                     nascdrf.RecursionDropId1, nascdrf.RecursionDropId2, nascdrf.RecursionDropId3, nascdrf.RecursionDropId4, nascdrf.RecursionDropId5, nascdrf.RecursionDropId6, nascdrf.RecursionDropId7, nascdrf.RecursionDropId8, 
					 nascdrf.RecursionDropId9, nascdrf.RecursionDropId10, nascdrf.RecursionDropId11, nascdrf.RecursionDropId12, nascdrf.RecursionDropId13, nascdrf.RecursionDropId14, nascdrf.RecursionDropId15, nascdrf.RecursionDropId16
					 from t_NpcAttrSpecCopyDropResetFinal as nascdrf join t_param as p on (nascdrf.RecursionDropId1 == p.Id or nascdrf.RecursionDropId2 == p.Id or nascdrf.RecursionDropId3 == p.Id or nascdrf.RecursionDropId4 == p.Id or nascdrf.RecursionDropId5 == p.Id or nascdrf.RecursionDropId6 == p.Id or 
					                                                                  nascdrf.RecursionDropId7 == p.Id or nascdrf.RecursionDropId8 == p.Id or nascdrf.RecursionDropId9 == p.Id or nascdrf.RecursionDropId10 == p.Id or nascdrf.RecursionDropId11 == p.Id or nascdrf.RecursionDropId12 == p.Id or
																					  nascdrf.RecursionDropId13 == p.Id or nascdrf.RecursionDropId14 == p.Id or nascdrf.RecursionDropId15 == p.Id or nascdrf.RecursionDropId16 == p.Id);
drop table if exists t_ResultDistinct;
create table t_ResultDistinct(Id integer, Description text, Name text, NpcLevel integer, DropQingYi integer, DropMentorTeachingId integer, IsRecordDropLog integer, DropResetCountId integer, DropResetName text, REORRG text, CopyDropId integer, DropListId integer, 
                      RecursionDropId1 integer, RecursionDropId2 integer, RecursionDropId3 integer, RecursionDropId4 integer, RecursionDropId5 integer, RecursionDropId6 integer, RecursionDropId7 integer, RecursionDropId8 integer, 
					  RecursionDropId9 integer, RecursionDropId10 integer, RecursionDropId11 integer, RecursionDropId12 integer, RecursionDropId13 integer, RecursionDropId14 integer, RecursionDropId15 integer, RecursionDropId16 integer);
insert into t_ResultDistinct(Id, Description, Name, NpcLevel, DropQingYi, DropMentorTeachingId, IsRecordDropLog, DropResetCountId, DropResetName, REORRG, CopyDropId, DropListId, 
                     RecursionDropId1, RecursionDropId2, RecursionDropId3, RecursionDropId4, RecursionDropId5, RecursionDropId6, RecursionDropId7, RecursionDropId8, 
					 RecursionDropId9, RecursionDropId10, RecursionDropId11, RecursionDropId12, RecursionDropId13, RecursionDropId14, RecursionDropId15, RecursionDropId16) 
                     select distinct * from t_ResultMid;
drop table if exists t_Result;
create table t_Result(Id integer, Description text, Name text, NpcLevel integer, DropQingYi integer, DropMentorTeachingId integer, IsRecordDropLog integer, DropResetCountId integer, DropResetName text, REORRG text, CopyDropId integer, DropListId integer, 
                      RecursionDropId1 integer, RecursionDropId2 integer, RecursionDropId3 integer, RecursionDropId4 integer, RecursionDropId5 integer, RecursionDropId6 integer, RecursionDropId7 integer, RecursionDropId8 integer, 
					  RecursionDropId9 integer, RecursionDropId10 integer, RecursionDropId11 integer, RecursionDropId12 integer, RecursionDropId13 integer, RecursionDropId14 integer, RecursionDropId15 integer, RecursionDropId16 integer);
insert into t_Result(Id, Description, Name, NpcLevel, DropQingYi, DropMentorTeachingId, IsRecordDropLog, DropResetCountId, DropResetName, REORRG, CopyDropId, DropListId, 
                     RecursionDropId1, RecursionDropId2, RecursionDropId3, RecursionDropId4, RecursionDropId5, RecursionDropId6, RecursionDropId7, RecursionDropId8, 
					 RecursionDropId9, RecursionDropId10, RecursionDropId11, RecursionDropId12, RecursionDropId13, RecursionDropId14, RecursionDropId15, RecursionDropId16) 
                     select * from t_ResultDistinct;